{"version":3,"sources":["components/peopleStaff.js"],"names":["divStyle","backgroundColor","hr","background","height","width","marginTop","marginBottom","PeopleStaff","consumeApi","loading","error","data","style","src","require","alt","className","staff","map","i","key","Header","color","Toggle","as","Card","variant","eventKey","name","Collapse","Body","imagePath","username","tagline","title","interestArea","office","website","phone","email","twitter","facebook"],"mappings":"+HAAA,0FAKMA,EAAW,CACbC,gBAAiB,SAGfC,EAAK,CAACC,WAAY,2EACpBC,OAAQ,MACRC,MAAO,OACPC,UAAW,IACXC,aAAc,KAEH,SAASC,IAAe,IAAD,EAK9BC,YAAW,YAHXC,EAF8B,EAE9BA,QACAC,EAH8B,EAG9BA,MACAC,EAJ8B,EAI9BA,KAEJ,OAAGF,EAEK,yBAAKG,MAAOb,GACR,yBAAKc,IAAKC,EAAQ,IAA0BC,IAAI,eAIpDL,EAEA,yBAAKE,MAAOb,GACR,0CAMJ,yBAAKiB,UAAU,4BAA4BJ,MAAOb,GAC9C,wBAAIa,MAAOX,IACX,wBAAIe,UAAU,qBAAd,SACA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,gBACVL,EAAKM,MAAMC,KAAI,SAACD,EAAOE,GAAR,OAEZ,kBAAC,IAAD,CAAWC,IAAKD,GACZ,kBAAC,IAAD,KACI,kBAAC,IAAKE,OAAN,CAAaT,MAAO,CAAEZ,gBAAiB,OAAQsB,MAAO,UAClD,kBAAC,IAAUC,OAAX,CAAkBC,GAAIC,IAAKJ,OAAQK,QAAQ,OAAOC,SAAS,OACtDV,EAAMW,OAGf,kBAAC,IAAUC,SAAX,CAAoBF,SAAS,OAC7B,kBAAC,IAAKG,KAAN,KACI,yBAAKjB,IAAKI,EAAMc,UAAWhB,IAAI,UAC7B,WAAO,GAAsB,KAAnBE,EAAMe,UAAsC,SAAnBf,EAAMe,SAAsB,OAAS,0CAAgBf,EAAMe,UAA9F,GACA,WAAO,GAAqB,KAAlBf,EAAMgB,QAAiB,OAAS,yCAAehB,EAAMgB,SAA/D,GACA,WAAO,GAAmB,KAAhBhB,EAAMiB,MAAe,OAAS,uCAAajB,EAAMiB,OAA3D,GACA,WAAO,GAA0B,KAAvBjB,EAAMkB,aAAsB,OAAS,+CAAqBlB,EAAMkB,cAA1E,GACA,WAAO,GAAoB,KAAjBlB,EAAMmB,QAAkC,OAAjBnB,EAAMmB,OAAkB,OAAS,wCAAcnB,EAAMmB,QAAtF,GACA,WAAO,GAAqB,KAAlBnB,EAAMoB,QAAiB,OAAS,yCAAepB,EAAMoB,SAA/D,GACA,WAAO,GAAmB,KAAhBpB,EAAMqB,MAAe,OAAS,uCAAarB,EAAMqB,OAA3D,GACA,WAAO,GAAmB,KAAhBrB,EAAMsB,MAAe,OAAS,uCAAatB,EAAMsB,OAA3D,GACA,WAAO,GAAqB,KAAlBtB,EAAMuB,QAAiB,OAAS,yCAAevB,EAAMuB,SAA/D,GACA,WAAO,GAAsB,KAAnBvB,EAAMwB,SAAkB,OAAS,0CAAgBxB,EAAMwB,UAAjE,YAQ1B,wBAAI7B,MAAOX","file":"static/js/13.0819fda4.chunk.js","sourcesContent":["import React from 'react'\nimport consumeApi from '../consumeApi';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\n\nconst divStyle = {\n    backgroundColor: 'white',\n};\n\nconst hr = {background: 'linear-gradient(to right,#87be31 15%,#ff0c64 35%,#0072ef 65%,#ff8e18 95%',\n    height: '5px',\n    width: '100%',\n    marginTop: '0',\n    marginBottom: '0'}\n\nexport default function PeopleStaff() {\n    const {\n        loading, \n        error, \n        data\n    } = consumeApi('/people/')\n    if(loading){\n        return(\n            <div style={divStyle}>\n                <img src={require('../img/preloader4.png')} alt='preloader' />\n            </div>\n        )\n    }\n    else if(error){\n        return(\n            <div style={divStyle}>\n                <div>Error...</div>\n            </div>\n        )\n    }\n    else{\n        return(\n            <div className=\"border border-danger mb-5\" style={divStyle}>\n                <hr style={hr} />\n                <h4 className=\"w-50 mx-auto mt-5\">Staff</h4>\n                <div className=\"container mb-5\">\n                    <div className=\"card-columns\"> \n                        {data.staff.map((staff, i) =>\n                        //TODO style accordions, fix values that return null\n                            <Accordion key={i}>\n                                <Card>\n                                    <Card.Header style={{ backgroundColor: '#000', color: 'white' }}>\n                                        <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey='{i}'>\n                                            {staff.name}\n                                        </Accordion.Toggle>\n                                    </Card.Header>\n                                    <Accordion.Collapse eventKey='{i}'>\n                                    <Card.Body>\n                                        <img src={staff.imagePath} alt=\"staff\" />\n                                        {(() => {if(staff.username !== '' || staff.username === 'null'){ return ( <div>Username: {staff.username}</div> )}})()}\n                                        {(() => {if(staff.tagline !== ''){ return ( <div>Tagline: {staff.tagline}</div> )}})()}\n                                        {(() => {if(staff.title !== ''){ return ( <div>Title: {staff.title}</div> )}})()}\n                                        {(() => {if(staff.interestArea !== ''){ return ( <div>Interest Area: {staff.interestArea}</div> )}})()}\n                                        {(() => {if(staff.office !== '' || staff.office !== null){ return ( <div>Office: {staff.office}</div> )}})()}\n                                        {(() => {if(staff.website !== ''){ return ( <div>Website: {staff.website}</div> )}})()}\n                                        {(() => {if(staff.phone !== ''){ return ( <div>Phone: {staff.phone}</div> )}})()}\n                                        {(() => {if(staff.email !== ''){ return ( <div>Email: {staff.email}</div> )}})()}\n                                        {(() => {if(staff.twitter !== ''){ return ( <div>Twitter: {staff.twitter}</div> )}})()}\n                                        {(() => {if(staff.facebook !== ''){ return ( <div>Facebook: {staff.facebook}</div> )}})()}\n                                    </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                            </Accordion>\n                        )}\n                    </div>\n                </div>\n                <hr style={hr} />\n            </div> \n        )\n    }\n}"],"sourceRoot":""}